name: TJPCov
on:
   push:
        branches: [ master ]
   pull_request:
        branches: [ master ]

jobs:
     build:
          runs-on: ubuntu-latest
          steps:
             - uses: actions/checkout@v2
             - name: Set up Python 3.6
               uses: actions/setup-python@v2
               with:
                        python-version: '3.6'

            # TODO: Fix cache
            # Commented out because cache makes the actions to fail
            # 
            #  - name: Cache pip
            #    uses: actions/cache@v2
            #    with:
            #          # Based on: https://medium.com/ai2-blog/python-caching-in-github-actions-e9452698e98d
            #          # We need to cache everything as we are compiling some
            #          # packages and their python wrapper look for the source
            #          # files.
            #          path: ${{ env.pythonLocation }}
            #          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
            #          restore-keys: |
            #                    ${{ runner.os }}-pip-
            #                    ${{ runner.os }}-

             - name: Install dependencies	
               run: |
                        # Install non-python NaMaster dependencies
                        sudo -H apt-get install libgsl-dev libfftw3-dev libcfitsio-dev
                        # Update pip 
                        pip install -U pip
                        # Install wheel to avoid recompiling packages already
                        # in the cache.
                        pip install -U wheel
                        # Use a for loop to avoid NaMaster to be compiled
                        # before installing its dependencies
                        # (https://github.com/LSSTDESC/NaMaster/issues/138)
                        set -e
                        for i in `cat requirements.txt`; do
                           pip install -U $i;
                        done
                        # pip install -r requirements.txt
                        # pip install .
                

             - name: Tests
               run: |
                        # Run harmonic Space
                        python3 -m pytest -rs --log-cli-level=INFO --capture=no  ./tests/test_conf_minimal.py
                        
                        # Run Configuration Space
                        python3 -m pytest -rs --log-cli-level=INFO --capture=no  ./tests/test_conf_minimal_cs.py
                        
                        # Run Namaster tests
                        python3 -m pytest -rs --log-cli-level=INFO --capture=no tests/test_nmt_tools.py
                        python3 -m pytest -rs --log-cli-level=INFO --capture=no tests/test_nmt.py

             - name: Test mpi (openmpi)
               run: |
                        # Install openmpi
                        sudo apt install -y openmpi-bin libopenmpi-dev
                        # Install mpi4py. Not included in requirements as one
                        # can run the code in serial
                        pip install -U mpi4py

                        # Run MPI tests
                        mpiexec -n 2 python3 -m pytest -rs --log-cli-level=INFO --capture=no tests/test_mpi.py
                        
                        # Uninstall openmpi
                        sudo apt remove -y openmpi-bin libopenmpi-dev
                        pip uninstall -y mpi4py

             - name: Test mpi (mpich)
               run: |
                        # Install mpich
                        sudo apt install -y mpich libmpich-dev
                        pip install -U mpi4py --no-binary

                        # Run MPI tests
                        mpiexec -n 2 python3 -m pytest -rs --log-cli-level=INFO --capture=no tests/test_mpi.py
                        
                        # Uninstall mpich
                        sudo apt remove -y mpich libmpich-dev
                        pip uninstall -y mpi4py
